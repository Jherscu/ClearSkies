// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript { // TODO(jherscu): Update outdated buildscript syntax and switch to kotlin
    ext { // TODO(jherscu): Move versions to gradle versions catalog
        compileSdkVersion = 34
        targetSdkVersion = 34
        minSdkVersion = 26
        arch_test_version = '2.1.0'
        coil_version = '2.4.0'
        compose_accompanist_version = '0.30.1'
        compose_activity_version = '1.8.2'
        compose_bom_version = '2023.10.01'
        compose_constraint_layout_version = '1.0.1'
        compose_material3_version = '1.1.2'
        core_ktx_version = '1.12.0'
        coroutine_version = '1.6.4'
        detekt_version = '1.23.0'
        espresso_version = '3.5.1'
        espresso_contrib_version = '3.5.1'
        gradle_version = '8.1.2'
        hamcrest_version = '2.2'
        hilt_version = '2.48.1'
        hilt_navigation_compose_version = '1.1.0'
        immutable_collections_version = '0.3.6'
        junit_version = '4.13.2'
        junit_androidx_ext_version = '1.1.5'
        kotlin_version = '1.9.0'
        kotlin_compiler_ext_version = '1.5.2'
        ktlint_version = '1.0.1'
        ktlint_wrapper_version = '12.0.3'
        ktlint_compose_version = '0.0.26'
        leak_canary_version = '2.8.1'
        lifecycle_version = '2.6.2'
        material_version = '1.11.0'
        mockk_version = '1.13.5'
        moshi_version = '1.9.3'
        nav_version = '2.7.6'
        retrofit_version = '2.9.0'
        robolectric_version = '4.6'
        room_version = '2.6.1'
        safe_args_version = '2.5.3'
        secrets_version = '2.0.1'
        splash_screen_version = '1.0.1'
        store_version = '1.0.0'
        timber_version = '4.7.1'
        work_version = '2.9.0'
    }
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        // API Key
        classpath "com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin:$secrets_version"
        //Ktlint
        classpath "org.jlleitschuh.gradle:ktlint-gradle:$ktlint_wrapper_version"
        classpath "com.twitter.compose.rules:ktlint:$ktlint_compose_version"
    }
}

tasks.register('installGitHook', Copy) {
    from new File(rootProject.rootDir, 'scripts/pre-push')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0777
}
tasks.getByPath(':app:preBuild').configure {
    dependsOn installGitHook
}

tasks.register('clean', Delete) {
    delete Project.layout.buildDirectory
}