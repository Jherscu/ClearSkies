plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'org.jlleitschuh.gradle.ktlint'
    id("io.gitlab.arturbosch.detekt").version("$detekt_version")
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

android {
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.jHerscu.clearskies"
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
        compose true
    }

    testOptions {
        animationsDisabled = true
        unitTests {
            // Always show the result of every unit test when running via command line,
            // even if it passes
            includeAndroidResources = true
            /* Decide whether un-mocked methods from android.jar should
             * throw exceptions or return default values
             * (Combats exceptions thrown for log statements, etc. in test methods) */
            returnDefaultValues = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    kotlin {
        jvmToolchain(17)
    }

    tasks.withType(JavaCompile) {
        options.release = 17
    }

    detekt {
        toolVersion = detekt_version
        config.setFrom(file("config/detekt/detekt.yml"))
        buildUponDefaultConfig = true
        basePath = projectDir
    }

    tasks.named("detekt").configure {
        reports {
            html.required.set(true)
            html.outputLocation.set(file("build/reports/detekt.html"))
            md.required.set(true)
            md.outputLocation.set(file("build/reports/detekt.md"))
        }
    }

    composeOptions {
        kotlinCompilerExtensionVersion = rootProject.kotlin_compiler_ext_version
    }

    lint {
        abortOnError = false
    }

    namespace 'com.jHerscu.clearskies'
}

dependencies {

    // Core
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.test.ext:junit-ktx:$junit_androidx_ext_version"

    // Core Testing
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.hamcrest:hamcrest:$hamcrest_version"
    testImplementation "io.mockk:mockk-android:$mockk_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_androidx_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_contrib_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"

    // ViewModel lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Logging
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Memory Leak Detection
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_compose_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Retrofit w/ Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // Coil w/o singleton
    implementation "io.coil-kt:coil-base:$coil_version"
    implementation "io.coil-kt:coil-compose:$coil_version"

    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // WorkManager w/ Kotlin + Coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:$store_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Compose BOM
    implementation "androidx.compose:compose-bom:$compose_bom_version"
    implementation "androidx.compose.animation:animation"
    implementation "androidx.compose.foundation:foundation"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.material3:material3:$compose_material3_version"
    implementation "androidx.compose.runtime:runtime"
    implementation "androidx.compose.runtime:runtime-saveable" // TODO(jherscu): research
    implementation "androidx.compose.ui:ui"

    // Compose Misc.
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.activity:activity-compose:$compose_activity_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:$compose_constraint_layout_version"

    // Compose Accompanist
    implementation "com.google.accompanist:accompanist-systemuicontroller:$compose_accompanist_version"
    implementation "com.google.accompanist:accompanist-placeholder:$compose_accompanist_version"
}